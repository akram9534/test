{"name": "test_amountverfication", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@value='Add to Cart']\"}\n  (Session info: chrome=115.0.5790.110); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0105A813+48355]\n\t(No symbol) [0x00FEC4B1]\n\t(No symbol) [0x00EF5358]\n\t(No symbol) [0x00F209A5]\n\t(No symbol) [0x00F20B3B]\n\t(No symbol) [0x00F4E232]\n\t(No symbol) [0x00F3A784]\n\t(No symbol) [0x00F4C922]\n\t(No symbol) [0x00F3A536]\n\t(No symbol) [0x00F182DC]\n\t(No symbol) [0x00F193DD]\n\tGetHandleVerifier [0x012BAABD+2539405]\n\tGetHandleVerifier [0x012FA78F+2800735]\n\tGetHandleVerifier [0x012F456C+2775612]\n\tGetHandleVerifier [0x010E51E0+616112]\n\t(No symbol) [0x00FF5F8C]\n\t(No symbol) [0x00FF2328]\n\t(No symbol) [0x00FF240B]\n\t(No symbol) [0x00FE4FF7]\n\tBaseThreadInitThunk [0x757900C9+25]\n\tRtlGetAppContainerNamedObjectPath [0x770D7B1E+286]\n\tRtlGetAppContainerNamedObjectPath [0x770D7AEE+238]", "trace": "self = <test_file_002.Test_Credence_002 object at 0x000001C6D1536D50>\n\n    def test_amountverfication(self):\n        import time\n    \n        from selenium import webdriver\n        from selenium.webdriver.common.by import By\n        from selenium.webdriver.support.select import Select\n    \n        chrome_options = webdriver.ChromeOptions()\n        chrome_options.add_argument(\"headless\")\n    \n        #driver = webdriver.Chrome(options=chrome_options)\n        driver = webdriver.Chrome()\n        driver.maximize_window()\n        # from selenium.webdriver.firefox.options import Options\n        # options = Options()\n        # options.binary_location = 'C:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe'\n        # driver = webdriver.Firefox(options=options)\n    \n        driver.get(\"https://automation.credence.in/login\")\n        driver.find_element(By.XPATH, \"//input[@name='email']\").send_keys(\"Credencetest@test.com\")\n        driver.find_element(By.CSS_SELECTOR, \"input[id='password']\").send_keys(\"Credence@123\")\n        # Click Login button\n        driver.find_element(By.XPATH, \"//button[@type='submit']\").click()\n    \n        # Click on Product--Macbook\n        driver.find_element(By.XPATH, \"/html/body/div/div[2]/div[3]/div/div/a[2]/h3\").click()\n        # Click on add to cart\n        driver.find_element(By.XPATH, \"//input[@value='Add to Cart']\").click()\n        # Click on Continue Shopping\n        driver.find_element(By.XPATH, \"//a[@class='btn btn-primary btn-lg']\").click()\n        # Click on Product--Headphone\n        driver.find_element(By.XPATH, \"//h3[normalize-space()='Headphones']\").click()\n        # Click on add to cart\n>       driver.find_element(By.XPATH, \"//input[@value='Add to Cart']\").click()\n\ntest_file_002.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:740: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C6D1560090>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x770D7B1E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x770D7AEE+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@value='Add to Cart']\"}\nE         (Session info: chrome=115.0.5790.110); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x0105A813+48355]\nE       \t(No symbol) [0x00FEC4B1]\nE       \t(No symbol) [0x00EF5358]\nE       \t(No symbol) [0x00F209A5]\nE       \t(No symbol) [0x00F20B3B]\nE       \t(No symbol) [0x00F4E232]\nE       \t(No symbol) [0x00F3A784]\nE       \t(No symbol) [0x00F4C922]\nE       \t(No symbol) [0x00F3A536]\nE       \t(No symbol) [0x00F182DC]\nE       \t(No symbol) [0x00F193DD]\nE       \tGetHandleVerifier [0x012BAABD+2539405]\nE       \tGetHandleVerifier [0x012FA78F+2800735]\nE       \tGetHandleVerifier [0x012F456C+2775612]\nE       \tGetHandleVerifier [0x010E51E0+616112]\nE       \t(No symbol) [0x00FF5F8C]\nE       \t(No symbol) [0x00FF2328]\nE       \t(No symbol) [0x00FF240B]\nE       \t(No symbol) [0x00FE4FF7]\nE       \tBaseThreadInitThunk [0x757900C9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x770D7B1E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x770D7AEE+238]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException"}, "start": 1690787902274, "stop": 1690788166635, "uuid": "1e94aea5-d39d-475c-867c-46f5f36e09b6", "historyId": "d98dcf3a909ccb3ce43335a1710a338c", "testCaseId": "d98dcf3a909ccb3ce43335a1710a338c", "fullName": "test_file_002.Test_Credence_002#test_amountverfication", "labels": [{"name": "suite", "value": "test_file_002"}, {"name": "subSuite", "value": "Test_Credence_002"}, {"name": "host", "value": "DESKTOP-O38FJEB"}, {"name": "thread", "value": "6536-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_file_002"}]}